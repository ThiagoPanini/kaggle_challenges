<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tbl_rsrc_stacked_words (Desenvolvimento)' inline='true' name='federated.1cn75y01cf2wjg1a9m1ka0meuqqt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-CJKTBO0\SQLEXPRESS' name='sqlserver.0330yre1f9fd9n1d4fgy00thebye'>
            <connection authentication='sspi' class='sqlserver' dbname='Desenvolvimento' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-CJKTBO0\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.0330yre1f9fd9n1d4fgy00thebye' name='tbl_rsrc_stacked_words' table='[dbo].[tbl_rsrc_stacked_words]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ano_mes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ano_mes]</local-name>
            <parent-name>[tbl_rsrc_stacked_words]</parent-name>
            <remote-alias>ano_mes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[tbl_rsrc_stacked_words]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[tbl_rsrc_stacked_words]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stacked_text</remote-name>
            <remote-type>130</remote-type>
            <local-name>[stacked_text]</local-name>
            <parent-name>[tbl_rsrc_stacked_words]</parent-name>
            <remote-alias>stacked_text</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ano Mes' datatype='string' name='[ano_mes]' role='dimension' type='nominal' />
      <column caption='Cluster' datatype='string' name='[cluster]' role='dimension' type='nominal' />
      <column caption='Stacked Text' datatype='string' name='[stacked_text]' role='dimension' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column-instance column='[stacked_text]' derivation='None' name='[none:stacked_text:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.554945' measure-ordering='alphabetic' measure-percentage='0.445055' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:stacked_text:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ótima&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;agora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;antes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rápida&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;entregue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;nao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;sempre&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;entrega&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;conforme&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ótimo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;gostei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;parabéns&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;boa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;compra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ser&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;recebi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;perfeito&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;produtos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tudo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ainda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;excelente&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;rápido&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dias&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;prazo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;previsto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;comprei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nota&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;site&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;correios&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;porém&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;recomendo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;dentro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;embalado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pois&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;veio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;chegou&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;comprar&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;number&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;certo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;super&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lannister&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;dia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;qualidade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;loja&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pedido&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;produto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;apenas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;bem&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Planilha 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='tbl_rsrc_stacked_words (Desenvolvimento)' name='federated.1cn75y01cf2wjg1a9m1ka0meuqqt' />
          </datasources>
          <datasource-dependencies datasource='federated.1cn75y01cf2wjg1a9m1ka0meuqqt'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Ano Mes' datatype='string' name='[ano_mes]' role='dimension' type='nominal' />
            <column caption='Cluster' datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column-instance column='[stacked_text]' derivation='Count' name='[cnt:stacked_text:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ano_mes]' derivation='None' name='[none:ano_mes:nk]' pivot='key' type='nominal' />
            <column-instance column='[cluster]' derivation='None' name='[none:cluster:nk]' pivot='key' type='nominal' />
            <column-instance column='[stacked_text]' derivation='None' name='[none:stacked_text:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Stacked Text' datatype='string' name='[stacked_text]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:ano_mes:nk]'>
            <groupfilter function='member' level='[none:ano_mes:nk]' member='&quot;2020-04-19&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:cluster:nk]'>
            <groupfilter function='member' level='[none:cluster:nk]' member='&quot;4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:stacked_text:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:stacked_text:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:status:nk]'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;REPROVADO&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:stacked_text:nk]</column>
            <column>[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:ano_mes:nk]</column>
            <column>[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:status:nk]</column>
            <column>[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:cluster:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:stacked_text:nk]' />
              <size column='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[cnt:stacked_text:qk]' />
              <text column='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:stacked_text:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EBBDB5F1-172F-44D9-B454-A4D476676542}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Planilha 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card mode='radiolist' param='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:cluster:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:status:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:ano_mes:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:ano_mes:nk]</field>
            <field>[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:cluster:nk]</field>
            <field>[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:stacked_text:nk]</field>
            <field>[federated.1cn75y01cf2wjg1a9m1ka0meuqqt].[none:status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D356388A-1E3F-4F3A-9BA1-785FAFF8656D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Planilha 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
